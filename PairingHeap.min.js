var __extends=this.__extends||function(n,t){function r(){this.constructor=n}for(var i in t)t.hasOwnProperty(i)&&(n[i]=t[i]);r.prototype=t.prototype,n.prototype=new r},DataStructures;(function(n){(function(n){var i=function(n){function t(){n.apply(this,arguments)}return __extends(t,n),t.prototype.children=function(){return Array(this.left,this.right)},t.prototype.priority=function(){throw new Error("This method is abstract");},t.prototype.compare=function(n){var t=this.priority(),i=n.priority();return t==i?0:t<i?-1:1},t.prototype.addChild=function(n){var r=undefined,i,t;return this.compare(n)<=0?(t=this.left,i=n.right,n.right=t,this.left=n,this.right=i,n.parent=this,t!==undefined&&(t.parent=n),i!==undefined&&(i.parent=this),r=this):(t=n.left,n.left=this,this.right=t,this.parent=n,t!=undefined&&(t.parent=this),r=n),r},t}(n.AbstractBinaryNode),t;n.AbstractPairingHeapNode=i,t=function(){function n(){this.root=undefined}return n.prototype.addNode=function(n){return this.root=this.root!=undefined?this.root.addChild(n):n,this},n.prototype.removeNode=function(n){var t=this.searchNode(n),i=t.left,r=t.right;return i.parent=t.parent,i.addChild(r),t},n.prototype.searchNode=function(n){return this.root!==undefined?this.root.searchChild(n):undefined},n.prototype.removeMinPriority=function(){var n=this.root;if(this.root!==undefined&&(this.root=n.left,this.root!=undefined))while(n.right!=undefined)this.root=this.root.addChild(this.root.right);return n},n.prototype.inOrder=function(){var n=[];return this.root!==undefined&&(n=this.root.inOrder(n)),n},n.prototype.preOrder=function(){var n=[];return this.root!==undefined&&(n=this.root.preOrder(n)),n},n.prototype.postOrder=function(){var n=[];return this.root!==undefined&&(n=this.root.postOrder(n)),n},n}(),n.PairingHeap=t})(n.Tree||(n.Tree={}));var t=n.Tree})(DataStructures||(DataStructures={}))