var DataStructures;(function(n){(function(n){var i=function(){function n(){}return n.prototype.children=function(){return Array(this.left,this.right)},n.prototype.compare=function(){throw new Error("This method is abstract");},n.prototype.addChild=function(n){return this.compare(n)>0?this.right==undefined?(n.parent=this,this.right=n,n):this.right.addChild(n):this.left==undefined?(n.parent=this,this.left=n,n):this.left.addChild(n)},n.prototype.searchChild=function(n){var t=this.compare(n);return t==0?this:t<0?this.left.searchChild(n):this.right.searchChild(n)},n.prototype.inOrder=function(n){return this.left!==undefined&&(n=this.left.inOrder(n)),n.push(this),this.right!==undefined&&(n=this.right.inOrder(n)),n},n.prototype.preOrder=function(n){return n.push(this),this.left!==undefined&&(n=this.left.inOrder(n)),this.right!==undefined&&(n=this.right.inOrder(n)),n},n.prototype.postOrder=function(n){return this.left!==undefined&&(n=this.left.inOrder(n)),this.right!==undefined&&(n=this.right.inOrder(n)),n.push(this),n},n}(),t;n.AbstractBinaryNode=i,t=function(){function n(){this.root=undefined}return n.prototype.addNode=function(n){return this.root==undefined?this.root=n:this.root.addChild(n),this},n.prototype.removeNode=function(n){var t=this.searchNode(n),i=t.left,r=t.right;return i.parent=t.parent,i.addChild(r),t},n.prototype.searchNode=function(n){return this.root!==undefined?this.root.searchChild(n):undefined},n.prototype.inOrder=function(){var n=[];return this.root!==undefined&&(n=this.root.inOrder(n)),n},n.prototype.preOrder=function(){var n=[];return this.root!==undefined&&(n=this.root.preOrder(n)),n},n.prototype.postOrder=function(){var n=[];return this.root!==undefined&&(n=this.root.postOrder(n)),n},n}(),n.BinaryTree=t})(n.Tree||(n.Tree={}));var t=n.Tree})(DataStructures||(DataStructures={}))